<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--Color-->
    <Color x:Key="Color.Primary">#468CEB</Color>
    <Color x:Key="Color.Primary60">#60468CEB</Color>

    <!--Brush-->
    <SolidColorBrush x:Key="Brush.Primary" Color="{DynamicResource Color.Primary}"></SolidColorBrush>
    <SolidColorBrush x:Key="Brush.Primary60" Color="{DynamicResource Color.Primary60}"></SolidColorBrush>
    <SolidColorBrush x:Key="Brush.BgControl" Color="White"></SolidColorBrush>
    <SolidColorBrush x:Key="Brush.BorderControl" Color="Black"></SolidColorBrush>

    <!--Style-->
    <Style x:Key="GroupBox.Primary" TargetType="GroupBox">
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Primary}"></Setter>
        <Setter Property="FontSize" Value="16"></Setter>
    </Style>

    <Style  x:Key="TextBlock.Normal" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"></Setter>
    </Style>

    <Style  x:Key="TextBlock.Primary" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"></Setter>
        <Setter Property="Foreground" Value="{DynamicResource Brush.Primary}"></Setter>
    </Style>

    <Style x:Key="TextBox.Primary" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="#E5E5E7"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                        <Grid>
                            <Border CornerRadius="5" x:Name="inboder" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="Transparent" >
                                <ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Margin="2,0"/>
                            </Border>
                        </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Opacity" TargetName="inboder" Value="0.56"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsKeyboardFocused" Value="true"/>
                                <Condition Property="IsReadOnly" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="inboder" Value="{DynamicResource Brush.Primary}"/>
                            <Setter Property="Background" TargetName="inboder" Value="white"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="CheckBox.Switch" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding"  Value="0 0 0 0" />
        <Setter Property="Cursor"  Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent" SnapsToDevicePixels="true">
                        <BulletDecorator.Bullet>
                            <StackPanel Orientation="Horizontal">
                                <ContentPresenter  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                               Margin="{TemplateBinding Padding}"
                                               RecognizesAccessKey="True"
                                               SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                               VerticalAlignment="Center" />
                                <Border x:Name="ForegroundPanel"
                                    BorderThickness="1"
                                    Width="40"
                                    Height="20"
                                    CornerRadius="10"
                                    Margin="{TemplateBinding Padding}">
                                    <Grid>
                                        <Canvas>
                                            <Border x:Name="CheckFlag"
                                                CornerRadius="0"
                                                VerticalAlignment="Center"
                                                BorderThickness="1"
                                                Width="20"
                                                Height="20"
                                                RenderTransformOrigin="0.5,0.5">
                                                <Border.RenderTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform />
                                                        <SkewTransform />
                                                        <RotateTransform />
                                                        <TranslateTransform />
                                                    </TransformGroup>
                                                </Border.RenderTransform>
                                                <Border.Effect>
                                                    <DropShadowEffect ShadowDepth="0.2"
                                                                  Direction="360" />
                                                </Border.Effect>
                                                <Ellipse Width="14"
                                                     Height="14"
                                                     Fill="#606060"
                                                     x:Name="ellipse"
                                                     Margin="0 0 0 3" />
                                            </Border>
                                        </Canvas>
                                    </Grid>
                                </Border>
                            </StackPanel>
                        </BulletDecorator.Bullet>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent"    Value="true">
                            <Setter Property="Padding"   Value="0,0,0,0" />
                        </Trigger>
                        <Trigger Property="IsEnabled"  Value="false">
                            <Setter Property="Foreground"  Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                        </Trigger>
                        <Trigger Property="IsChecked"  Value="True">
                            <Setter TargetName="ForegroundPanel"   Property="Background"  Value="{DynamicResource Brush.Primary}" />
                            <Setter TargetName="ellipse"  Property="Fill"  Value="White" />
                            <Setter TargetName="CheckFlag" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <TranslateTransform X="18" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Content"   Value="ON"></Setter>
                            <Setter Property="Foreground"   Value="White"></Setter>
                        </Trigger>
                        <Trigger Property="IsChecked"  Value="False">
                            <Setter TargetName="ForegroundPanel"  Property="BorderBrush" Value="#606060" />
                            <Setter Property="Content"   Value="OFF"></Setter>
                            <Setter Property="Foreground"  Value="#9C9C9C"></Setter>
                            <Setter TargetName="ellipse"   Property="Fill"  Value="#606060" />
                            <Setter TargetName="CheckFlag" Property="RenderTransform">
                                <Setter.Value>
                                    <TransformGroup>
                                        <TranslateTransform X="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsFocused"  Value="True">
                            <Setter Property="BorderBrush"   Value="White" />
                            <Setter Property="BorderThickness"  Value="1" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Visibility"  Value="Hidden" />
                            <Setter TargetName="ellipse" Property="Fill" Value="#383838" />
                            <Setter TargetName="ForegroundPanel" Property="BorderBrush"  Value="#383838" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="Button.Default" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="160"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#9c9c9c"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Opacity"  Value="0.7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Button.Primary" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="160"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Foreground" Value="#FFFFFF"/>
        <Setter Property="Background" Value="{StaticResource Brush.Primary}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                        <ContentPresenter   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="#9c9c9c"></Setter>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background"  Value="{DynamicResource Brush.Primary60}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>